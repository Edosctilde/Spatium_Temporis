from cost import *
#CLASSI
#definisco la classe base
class inst():
    def __init__(self, nomeFile, envDirection):
        self.nomeFile = nomeFile
        self.dir = envDirection
        
    def play(self, when, dur, f, bw, vol, where = None, df = 0):
        
        alpha = gestione_spazio(when, where)
        print("i1 %f %f \"../audioFiles/%s.wav\" %f %f %f %f %f %f" %(when, dur, self.nomeFile, f, bw, alpha, vol, df, self.dir))
        
        return when+dur

    def long_play(self, when, dur, f, bw, vol, where = None, df = 0, segmentazione = None):
        #la funzione serve a generare fasce sonore + lunghe di AudioMaxLen
        durate = segmentazione_durata(dur, segmentazione)
                                                                                             #DA AGGIUSTARE IL GLISSANDO con df
        for n in range(len(durate)):
            when = self.play(when, durate[n], f, bw, vol, where, df)
            
            """ NOTA:CREARE SIA NELLA FUNZIONE seq CHE IN QUELLA long_play UN MODO
            DI OVERLAP PER NON FARE CHE GLI ELEMENTI SIANO TRA DI LORO STACCATI
            """
#Ora la classe che riproduce in sequenza gli elementi
class seq():
    def __init__(self, sequenza, pesi):
        self.sequenza = sequenza
        self.pesi = pesi
        
    def play(self, when, f, bw, vol, where = None, df = 0, dt = 1):
        #dt è l'unità temporale
        lung = len(self.sequenza)
        f = check_ea(f, lung)
        bw = check_ea(bw, lung)
        vol = check_ea(vol, lung)
        where = check_ea(where, lung)
        df = check_ea(df, lung)
        for n in range(lung):
            if self.pesi[n]*dt > AudioMaxLen:
                when = self.sequenza[n].long_play(when, self.pesi[n]*dt, f[n], bw[n], vol[n], where[n], df[n])
            elif self.pesi[n]*dt < AudioMaxLen:
                when = self.sequenza[n].play(when, self.pesi[n]*dt, f[n], bw[n], vol[n], where[n], df[n])
        return when
    
#definisco gli strumenti per ogni file che ho
bianco = inst("b", direct)
giallo = inst("g", direct)
rosso = inst("r", direct)
azzurro = inst("a", direct)
nero = inst("n", direct)
